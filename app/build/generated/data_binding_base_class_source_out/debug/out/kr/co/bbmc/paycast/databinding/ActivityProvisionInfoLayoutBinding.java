// Generated by view binder compiler. Do not edit!
package kr.co.bbmc.paycast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.bbmc.paycast.R;

public final class ActivityProvisionInfoLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkProvideInfoId;

  @NonNull
  public final Button confirmBtnId;

  @NonNull
  public final EditText editTelnumId;

  @NonNull
  public final Button guideProvideInfoId;

  @NonNull
  public final TextView msgNotiBodyId;

  @NonNull
  public final TextView msgNotiTitleId;

  @NonNull
  public final Button skipBtnId;

  private ActivityProvisionInfoLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull CheckBox checkProvideInfoId, @NonNull Button confirmBtnId,
      @NonNull EditText editTelnumId, @NonNull Button guideProvideInfoId,
      @NonNull TextView msgNotiBodyId, @NonNull TextView msgNotiTitleId,
      @NonNull Button skipBtnId) {
    this.rootView = rootView;
    this.checkProvideInfoId = checkProvideInfoId;
    this.confirmBtnId = confirmBtnId;
    this.editTelnumId = editTelnumId;
    this.guideProvideInfoId = guideProvideInfoId;
    this.msgNotiBodyId = msgNotiBodyId;
    this.msgNotiTitleId = msgNotiTitleId;
    this.skipBtnId = skipBtnId;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProvisionInfoLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProvisionInfoLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_provision_info_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProvisionInfoLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_provide_info_id;
      CheckBox checkProvideInfoId = ViewBindings.findChildViewById(rootView, id);
      if (checkProvideInfoId == null) {
        break missingId;
      }

      id = R.id.confirm_btn_id;
      Button confirmBtnId = ViewBindings.findChildViewById(rootView, id);
      if (confirmBtnId == null) {
        break missingId;
      }

      id = R.id.edit_telnum_id;
      EditText editTelnumId = ViewBindings.findChildViewById(rootView, id);
      if (editTelnumId == null) {
        break missingId;
      }

      id = R.id.guide_provide_info_id;
      Button guideProvideInfoId = ViewBindings.findChildViewById(rootView, id);
      if (guideProvideInfoId == null) {
        break missingId;
      }

      id = R.id.msg_noti_body_id;
      TextView msgNotiBodyId = ViewBindings.findChildViewById(rootView, id);
      if (msgNotiBodyId == null) {
        break missingId;
      }

      id = R.id.msg_noti_title_id;
      TextView msgNotiTitleId = ViewBindings.findChildViewById(rootView, id);
      if (msgNotiTitleId == null) {
        break missingId;
      }

      id = R.id.skip_btn_id;
      Button skipBtnId = ViewBindings.findChildViewById(rootView, id);
      if (skipBtnId == null) {
        break missingId;
      }

      return new ActivityProvisionInfoLayoutBinding((LinearLayout) rootView, checkProvideInfoId,
          confirmBtnId, editTelnumId, guideProvideInfoId, msgNotiBodyId, msgNotiTitleId, skipBtnId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
