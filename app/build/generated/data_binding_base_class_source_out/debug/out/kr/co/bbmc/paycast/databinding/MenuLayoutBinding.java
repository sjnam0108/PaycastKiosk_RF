// Generated by view binder compiler. Do not edit!
package kr.co.bbmc.paycast.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.bbmc.paycast.R;

public final class MenuLayoutBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final LinearLayout eachMenuLayout;

  @NonNull
  public final ImageView menuImage;

  @NonNull
  public final TextView priceLabel;

  @NonNull
  public final TextView sectionLabel;

  private MenuLayoutBinding(@NonNull CoordinatorLayout rootView,
      @NonNull LinearLayout eachMenuLayout, @NonNull ImageView menuImage,
      @NonNull TextView priceLabel, @NonNull TextView sectionLabel) {
    this.rootView = rootView;
    this.eachMenuLayout = eachMenuLayout;
    this.menuImage = menuImage;
    this.priceLabel = priceLabel;
    this.sectionLabel = sectionLabel;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.each_menu_layout;
      LinearLayout eachMenuLayout = ViewBindings.findChildViewById(rootView, id);
      if (eachMenuLayout == null) {
        break missingId;
      }

      id = R.id.menu_image;
      ImageView menuImage = ViewBindings.findChildViewById(rootView, id);
      if (menuImage == null) {
        break missingId;
      }

      id = R.id.price_label;
      TextView priceLabel = ViewBindings.findChildViewById(rootView, id);
      if (priceLabel == null) {
        break missingId;
      }

      id = R.id.section_label;
      TextView sectionLabel = ViewBindings.findChildViewById(rootView, id);
      if (sectionLabel == null) {
        break missingId;
      }

      return new MenuLayoutBinding((CoordinatorLayout) rootView, eachMenuLayout, menuImage,
          priceLabel, sectionLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
